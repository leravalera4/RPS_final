// üîç –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ—à–µ–ª—å–∫–∞
// –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)

console.log('üß™ Testing wallet detection...')

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Privy
if (typeof window.privy === 'undefined') {
  console.error('‚ùå Privy not found')
} else {
  console.log('‚úÖ Privy found')
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const user = window.privy.user
  console.log('üë§ User:', user?.id)
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—à–µ–ª—å–∫–∏
  const wallets = window.privy.wallets || []
  console.log('üí∞ Wallets array:', wallets.length)
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º user.wallet
  const userWallet = user?.wallet
  console.log('üîç User wallet:', userWallet ? {
    address: userWallet.address?.substring(0, 12) + '...',
    chainType: userWallet.chainType,
    walletClientType: userWallet.walletClientType
  } : 'none')
  
  // –ò—â–µ–º Solana –∫–æ—à–µ–ª–µ–∫
  const solanaWallet = wallets.find(w => w.address && !w.address.startsWith('0x'))
  console.log('üîç Solana wallet in array:', solanaWallet ? {
    address: solanaWallet.address?.substring(0, 12) + '...',
    chainType: solanaWallet.chainType,
    walletClientType: solanaWallet.walletClientType
  } : 'none')
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫
  const finalWallet = solanaWallet || (userWallet?.chainType === 'solana' ? userWallet : null)
  console.log('üéØ Final wallet for signing:', finalWallet ? {
    address: finalWallet.address?.substring(0, 12) + '...',
    source: finalWallet === userWallet ? 'user.wallet' : 'wallets array',
    hasSignTransaction: !!finalWallet.signTransaction
  } : 'none')
  
  if (finalWallet) {
    console.log('‚úÖ Wallet found for signing!')
  } else {
    console.log('‚ùå No wallet found for signing')
  }
}
